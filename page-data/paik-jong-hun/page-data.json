{
    "componentChunkName": "component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx",
    "path": "/paik-jong-hun",
    "result": {"data":{"post":{"slug":"/paik-jong-hun","title":"test","date":"2025.10.25","tags":null,"description":null,"canonicalUrl":"","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"test\",\n  \"date\": \"2025-10-25T00:00:00.000Z\",\n  \"slug\": \"/paik-jong-hun\",\n  \"canonicalUrl\": \"\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"test\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{1,4-6}\",\n    \"{1,4-6}\": true\n  }, \"Public Class Test01{\\n    Public Static Void main(String[] args){\\n        int var1 = 0b1011;\\n        int var2 = 0206;\\n        int var3 = 365;\\n        int var4 = 0xB3;\\n\\n        System.out.println(\\\"Var1 = \\\" + Var1)\\n    }\\n}\\n\")), mdx(\"p\", null, \"\\uAD6C\\uC5ED \\uB098\\uB204\\uAE30\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"react-live\",\n    \"react-live\": true\n  }, \"const onClick = () => {\\n  alert(\\\"You opened me\\\");\\n};\\nrender(<button onClick={onClick}>Alohomora!</button>);\\n\")), mdx(\"p\", null, \"\\uAD6C\\uC5ED \\uB098\\uB204\\uAE30\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\",\n    \"metastring\": \"{2,4,5}\",\n    \"{2,4,5}\": true\n  }, \"const test = 3\\nconst foo = 'bar'\\nconst harry = 'potter'\\nconst hermione = 'granger'\\nconst ron = 'weasley'\\n\")), mdx(\"p\", null, \"\\uAD6C\\uC5ED \\uB098\\uB204\\uAE30\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-hcl\"\n  }, \"resource \\\"aws_instance\\\" \\\"example\\\" {\\n    ami = \\\"ami-0c55b159cbfafe1f0\\\"\\n    instance_type = \\\"t2.micro\\\"\\n    tags = {\\n        name = \\\"terraform-example\\\"\\n    }\\n}\\n\")), mdx(\"p\", null, \"\\uAD6C\\uC5ED \\uB098\\uB204\\uAE30\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \"Console.WriteLine(\\\"Hello from csharp\\\");\\n\")), mdx(\"p\", null, \"\\uAE00 \\uB098\\uB204\\uAE30\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-noLineNumbers\"\n  }, \"// code goes here\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"test 구역 나누기 구역 나누기 구역 나누기 구역 나누기 글 나누기","timeToRead":1,"banner":null}},"pageContext":{"slug":"/paik-jong-hun","formatString":"YYYY.MM.DD"}},
    "staticQueryHashes": ["2744905544","3090400250","318001574"]}